name: "Test build & deploy"
on: # this means we can trigger this workflow with push and manually on github dashboard
    push:
        branches: 
            - main # main branch test, build and deploy in the main

jobs: # By default, jobs run in parallel
    test:
        runs-on: ubuntu-latest
        steps:
          - name: Get code # WE want to get the code into our ubuntu environment
            uses: actions/checkout@v4

          # ubuntu already has node js installed. so no need to reinstall it.
          # else if you application relies on another package which is not pre installed you'll need to install it
          - name: Install Node Js
            uses: actions/setup-node@v4
            with:
              node-version: 20

          - name: Install dependencies
            run: npm ci # ci meaning use same packages in the packages-lock.json. However you could simply do `npm install`
          
          - name: Run our Tests on the runner
            run: npm run test
   name: Test, Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AI-Powered-Customer-Support-Chatbot-Frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test -- --ci --watchAll=false

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./AI-Powered-Customer-Support-Chatbot-Frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: AI-Powered-Customer-Support-Chatbot-Frontend/.next

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: List files in dist
        run: ls -la dist

      - name: Deploy
        run: echo "Deploying build to production..."


